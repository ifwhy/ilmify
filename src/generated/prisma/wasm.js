
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.SurahScalarFieldEnum = {
  id: 'id',
  sequence: 'sequence',
  number_of_verses: 'number_of_verses',
  name_short: 'name_short',
  name_long: 'name_long',
  name_en: 'name_en',
  name_id: 'name_id',
  translation_en: 'translation_en',
  translation_id: 'translation_id',
  revelation: 'revelation',
  revelation_en: 'revelation_en',
  revelation_id: 'revelation_id',
  tafsir: 'tafsir',
  audio_url: 'audio_url'
};

exports.Prisma.AyatScalarFieldEnum = {
  id: 'id',
  surah_number: 'surah_number',
  ayat_number: 'ayat_number',
  arabic: 'arabic',
  kitabah: 'kitabah',
  latin: 'latin',
  translation: 'translation'
};

exports.Prisma.HaditsScalarFieldEnum = {
  slug: 'slug',
  name: 'name',
  total: 'total'
};

exports.Prisma.DetailHaditsScalarFieldEnum = {
  id: 'id',
  number: 'number',
  arab: 'arab',
  terjemah: 'terjemah',
  slug: 'slug'
};

exports.Prisma.AsmaulHusnaScalarFieldEnum = {
  id: 'id',
  latin: 'latin',
  arabic: 'arabic',
  id_translation: 'id_translation',
  en_translation: 'en_translation'
};

exports.Prisma.QuotesScalarFieldEnum = {
  id: 'id',
  text: 'text',
  reference: 'reference'
};

exports.Prisma.NiatSholatScalarFieldEnum = {
  number: 'number',
  name: 'name',
  arabic: 'arabic',
  latin: 'latin',
  translation: 'translation'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  Surah: 'Surah',
  Ayat: 'Ayat',
  Hadits: 'Hadits',
  DetailHadits: 'DetailHadits',
  AsmaulHusna: 'AsmaulHusna',
  Quotes: 'Quotes',
  NiatSholat: 'NiatSholat'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Coding\\Hono\\ilmify\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "D:\\Coding\\Hono\\ilmify\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.15.0",
  "engineVersion": "85179d7826409ee107a6ba334b5e305ae3fba9fb",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n  output          = \"../src/generated/prisma\"\n}\n\n// prisma/schema.prisma\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Surah {\n  id               Int    @id\n  sequence         Int\n  number_of_verses Int\n  name_short       String\n  name_long        String\n  name_en          String\n  name_id          String\n  translation_en   String\n  translation_id   String\n  revelation       String\n  revelation_en    String\n  revelation_id    String\n  tafsir           String\n  audio_url        String\n\n  ayat Ayat[]\n\n  @@map(\"surah\")\n}\n\nmodel Ayat {\n  id           Int    @id\n  surah_number Int\n  ayat_number  Int\n  arabic       String\n  kitabah      String\n  latin        String\n  translation  String\n\n  surah Surah @relation(fields: [surah_number], references: [id], onDelete: Cascade)\n\n  @@map(\"ayat\")\n}\n\nmodel Hadits {\n  slug  String @id\n  name  String\n  total Int\n\n  details DetailHadits[]\n\n  @@map(\"hadits\")\n}\n\nmodel DetailHadits {\n  id       Int    @id\n  number   Int\n  arab     String\n  terjemah String\n  slug     String\n\n  rawi Hadits @relation(fields: [slug], references: [slug], onDelete: Cascade)\n\n  @@map(\"detail_hadits\")\n}\n\nmodel AsmaulHusna {\n  id             Int    @id\n  latin          String\n  arabic         String\n  id_translation String\n  en_translation String\n\n  @@map(\"asmaul_husna\")\n}\n\nmodel Quotes {\n  id        Int    @id\n  text      String\n  reference String\n\n  @@map(\"quotes\")\n}\n\n// model Doa {\n//   id Int @id\n//   text String\n//   reference String\n// }\n\nmodel NiatSholat {\n  number      Int    @id\n  name        String\n  arabic      String\n  latin       String\n  translation String\n\n  @@map(\"niat_sholat\")\n}\n",
  "inlineSchemaHash": "0af9a1562cc636b226a3977f277f15bc2a03c3945f1f613f560af3fa7e49e8b9",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Surah\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sequence\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"number_of_verses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name_short\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name_long\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name_en\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"translation_en\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"translation_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revelation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revelation_en\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revelation_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tafsir\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audio_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ayat\",\"kind\":\"object\",\"type\":\"Ayat\",\"relationName\":\"AyatToSurah\"}],\"dbName\":\"surah\"},\"Ayat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"surah_number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ayat_number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"arabic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitabah\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"translation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"surah\",\"kind\":\"object\",\"type\":\"Surah\",\"relationName\":\"AyatToSurah\"}],\"dbName\":\"ayat\"},\"Hadits\":{\"fields\":[{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"details\",\"kind\":\"object\",\"type\":\"DetailHadits\",\"relationName\":\"DetailHaditsToHadits\"}],\"dbName\":\"hadits\"},\"DetailHadits\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"arab\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"terjemah\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rawi\",\"kind\":\"object\",\"type\":\"Hadits\",\"relationName\":\"DetailHaditsToHadits\"}],\"dbName\":\"detail_hadits\"},\"AsmaulHusna\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"latin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"arabic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_translation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"en_translation\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"asmaul_husna\"},\"Quotes\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"quotes\"},\"NiatSholat\":{\"fields\":[{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"arabic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"translation\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"niat_sholat\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

